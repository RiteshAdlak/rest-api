{
  "swagger": "2.0",
  "info": {
    "description": "Documentation Representation for the Book REST API developed in Nodejs. ",
    "version": "1.0.0",
    "title": "Swagger Book"
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "registration",
      "description": "Register an User"
    },
    {
      "name": "admin",
      "description": "Admin Operations"
    },
    {
      "name": "users",
      "description": "Users oeration"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Register an User/Admin",
        "operationId": "placeSignup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signup Activity for an User/Admin.For Admin Signup, please use username=admin and enable admin flag from database using Query : db.users.update({'username':'admin'},{$set:{'admin':'true'}})",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "User Login",
        "operationId": "placeLogin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login Activity for an User",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "token": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List all the Users",
        "description": "Listing Users",
        "operationId": "listUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Listing Users Successful"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List all the Books",
        "description": "This Request will list down all the books.",
        "operationId": "listBooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization Header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request",
            "schema": {
              "type": "object",
              "properties": {
                "updatedAt": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "featured": {
                  "type": "boolean"
                },
                "comments": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Insertion",
        "operationId": "insertBook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Insertion Book",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "featured": {
                  "type": "boolean"
                },
                "comments": {
                  "type": "object"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization Header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Insertion Successful",
            "schema": {
              "type": "object",
              "properties": {
                "updatedAt": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "featured": {
                  "type": "boolean"
                },
                "comments": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Deletes all the Books",
        "description": "",
        "operationId": "deleteAllBooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/books/{bookId}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Deletes the specific Book with Id",
        "description": "",
        "operationId": "deleteBookId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookId",
            "in": "path",
            "description": "Specific Book to be Deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/books/{bookId}/comments": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "create comment",
        "description": "User can create comment for the specific BookId",
        "operationId": "createComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Comment Creation",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookId",
            "in": "path",
            "description": "Specific BookId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books/{bookId}/comments/{commentId}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update comment",
        "description": "User can update comment for the specific BookId",
        "operationId": "updateComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Comment Updation",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookId",
            "in": "path",
            "description": "Specific BookId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Specific commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete comment",
        "description": "User can delete comment for the specific BookId",
        "operationId": "deleteComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Format : Bearer JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookId",
            "in": "path",
            "description": "Specific BookId",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Specific commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}